<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Sample">
    <Style TargetType="{x:Type local:NumericUpDown}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumericUpDown}">
                    <Grid  Margin="3" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValueStates">
                                <!-- Make the Value property red when it is negative. -->
                                <VisualState x:Name="Negative">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#7F760000"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#7FFF0000"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <!-- Return the control to its initial state. -->
                                <VisualState x:Name="Positive"/>
                                
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:1" To="Negative">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <BounceEase EasingMode="EaseIn"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <!-- Add a focus rectangle to highlight the entire control when it has focus. -->
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual"
                                                                       Storyboard.TargetProperty="Visibility" 
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <!-- Return the control to its initial state by hiding the focus rectangle. -->
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="CommonStates">
                                <!-- Change the background to a gray brush in the disabled state. -->
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#7F767676"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#7F767676"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                
                                <!-- Return the control to its normal state. -->
                                <VisualState x:Name="Normal" />
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:1" To="Disabled">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <BounceEase EasingMode="EaseIn"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border"
                                    BorderThickness="1"
                                    BorderBrush="Gray" 
                                    Margin="7,2,2,2"
                                    Grid.RowSpan="2" 
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Stretch">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="White" Offset="0" />
                                        <GradientStop Color="White" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <TextBlock x:Name="TextBlock"
                                           Width="60" 
                                           TextAlignment="Right" 
                                           Padding="5"
                                           Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericUpDown}}, Path=Value}" />
                            </Border>
                            <RepeatButton Content="Up"
                                          Margin="2,5,5,0"
                                          x:Name="UpButton"
                                          Grid.Column="1"
                                          Grid.Row="0"/>
                            <RepeatButton Content="Down" 
                                          Margin="2,0,5,5"
                                          x:Name="DownButton"
                                          Grid.Column="1" 
                                          Grid.Row="1"/>
                            <Rectangle x:Name="FocusVisual" 
                                       Grid.ColumnSpan="2" 
                                       Grid.RowSpan="2" 
                                       Stroke="Black" 
                                       StrokeThickness="1"  
                                       Visibility="Collapsed"/>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>